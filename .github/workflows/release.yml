name: "release"

on:
  repository_dispatch:
    types: [on-demand-release]

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: macos-latest
            args: "--target aarch64-apple-darwin"
            name: macOS arm64
          - platform: macos-latest
            args: "--target x86_64-apple-darwin"
            name: macOS Intel
          - platform: "windows-latest"
            args: ""
            name: Windows x64
          - platform: ubuntu-latest
            args: ""
            name: Linux x64
          #- platform: "windows-latest"
          #  args: "--target aarch64-pc-windows-msvc"
          #  name: Windows arm64
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Check out project
        uses: actions/checkout@v4
        with:
          repository: egoist/chatwise
          token: ${{ secrets.GH_TOKEN_FOR_CHECKOUT }}
          ref: ${{ github.event.client_payload.sha }}

      - uses: pnpm/action-setup@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: "pnpm" # Set this to npm, yarn or pnpm.

      - name: setup bun (for running scripts)
        uses: oven-sh/setup-bun@v2

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable # Set this to dtolnay/rust-toolchain@nightly
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ contains(matrix.platform, 'macos') && 'aarch64-apple-darwin,x86_64-apple-darwin' || (contains(matrix.platform, 'ubuntu') && 'x86_64-unknown-linux-gnu' || 'aarch64-pc-windows-msvc,x86_64-pc-windows-msvc') }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: ". -> target"

      - name: Install posthog-cli
        run: |
          bun ./ensure-posthog.ts
   

      - name: install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: pnpm install # change this to npm or pnpm depending on which one you use.

      - name: test
        run: pnpm --filter desktop test

      - uses: tauri-apps/tauri-action@v0.5.18
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_CERTIFICATE: ${{secrets.APPLE_CERTIFICATE}}
          APPLE_CERTIFICATE_PASSWORD: ${{secrets.APPLE_CERTIFICATE_PASSWORD}}
          APPLE_ID: ${{secrets.APPLE_ID}}
          APPLE_PASSWORD: ${{secrets.APPLE_PASSWORD}}
          APPLE_TEAM_ID: ${{secrets.APPLE_TEAM_ID}}
          TAURI_SIGNING_PRIVATE_KEY: ${{secrets.TAURI_SIGNING_PRIVATE_KEY}}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD}}
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          IS_INTEL_MAC: ${{ contains(matrix.args, 'x86_64') }}
          MY_NAME: ${{ secrets.MY_NAME }}
          REDACT_2: ${{ secrets.REDACT_2 }}
          CI: false
          NODE_OPTIONS: "--max_old_space_size=4096"
          POSTHOG_CLI_ENV_ID: ${{ secrets.POSTHOG_CLI_ENV_ID }}
          POSTHOG_CLI_TOKEN: ${{ secrets.POSTHOG_CLI_TOKEN }}
        with:
          projectPath: ./desktop
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "v__VERSION__"
          releaseBody: "See the assets to download this version and install, or go to https://chatwise.app to download."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
          repo: chatwise-releases
          owner: egoist
          releaseCommitish: main
